/*
REACT
R-READ
we have given n coins we need to produce sum by these coins and printing minimum no. of coins which given sum as target


E-Eg
we have given 1,5,7 with target=11
no. of minimum coins needed will be three as 
5+5+1


A-ALGO:

We need to find minimum coins needed for making sum as target
for that
- we considering to variable take and nontake 
- we pick element and remain at the same index(initially it is 0) by subtracting that element from target
-we don't pick element and just move to next index by taking target as it is
-base case- if our target becomes zero then we will print the cnt as 0
-at last finding min from take and non take


C-CODE:
#include <bits/stdc++.h>
using namespace std;

int mini(vector<int> &nums,
         int target, int i, int n)
{
    if (target == 0)
    {
        return 0;
    }
    if (target < 0 || i == n)
    {
        return INT_MAX;
    }
    // push(multiple)
    int pick = mini(nums, target - nums[i], i, n); // mulitple call (duplicates)
    if (pick != INT_MAX)
    {
        pick = pick + 1;
    }
    int non_pick = mini(nums, target, i + 1, n);

    return min(pick, non_pick);
}

int main()
{
    int n, x;
    cin >> n;
    cin >> x;
    vector<int> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    int minimum = mini(arr, x, 0, n);
    if (minimum == INT_MAX)
    {
        cout << -1;
    }
    else
        cout << minimum;
}

T: TEST:
INPUT:
2 10
3 6

OUTPUT:  -1 
